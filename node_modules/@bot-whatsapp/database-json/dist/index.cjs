"use strict";var t=require("fs"),i=require("path");exports.JsonFileAdapter=class{constructor(t={filename:"de"}){this.listHistory=[],this.options={filename:"db.json"},this.options={...this.options,...t},this.pathFile=i.join(process.cwd(),this.options.filename),this.init().then()}async init(){if(!t.existsSync(this.pathFile))try{const i=JSON.stringify([],null,2);await t.promises.writeFile(this.pathFile,i,"utf-8")}catch(t){throw new Error(t.message)}}validateJson(t){try{return JSON.parse(t)}catch(t){return{}}}async readFileAndParse(){const i=await t.promises.readFile(this.pathFile,"utf-8");return this.validateJson(i)}async getPrevByNumber(t){const i=await this.readFileAndParse();if(!i.length)return;return i.slice().reverse().filter((t=>!!t.keyword)).find((i=>i.from===t))}async save(i){this.listHistory.push(i);const s=JSON.stringify(this.listHistory,null,2);await t.promises.writeFile(this.pathFile,s,"utf-8")}};
